name: swis-api CI/CD pipeline

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: [ self-hosted, public, docker ]
    steps:
    - uses: actions/checkout@v3
    - name: Build new swapi image (with staging).
      run: make build

  dev_deploy:
    runs-on: [ self-hosted, public, docker ]
    needs: [ build ]
    steps:
    - uses: actions/checkout@v3
    - name: Run dev container and run end-to-end test on it.
      run: make devploy e2e
      env:
        LOKI_URL: ${{ secrets.LOKI_URL }}

  dump_data:
    runs-on: [ self-hosted, public, docker ]
    needs: [ dev_deploy ]
    steps:
    - uses: actions/checkout@v3
    - name: Dump production data.
      run: make dump
      env:
        APP_URL: ${{ secrets.APP_URL }}
        ROOT_TOKEN: ${{ secrets.ROOT_TOKEN }}

  prod_deploy:
    runs-on: [ self-hosted, public, docker ]
    needs: [ dump_data ]
    steps:
    - uses: actions/checkout@v3
    - name: Deploy prod docker container, recreate container with fresh image.
      run: make run
      env:
        APP_ENVIRONMENT: production
        LOKI_URL: ${{ secrets.LOKI_URL }}
        ROOT_TOKEN: ${{ secrets.ROOT_TOKEN }}

  import_data:
    runs-on: [ self-hosted, public, docker ]
    needs: [ prod_deploy ]
    steps:
    - uses: actions/checkout@v3
    - name: Import dumped data to production.
      run: make import_dump
      env:
        APP_URL: ${{ secrets.APP_URL }}
        ROOT_TOKEN: ${{ secrets.ROOT_TOKEN }}

  generate_docs:
    runs-on: [ self-hosted, public, docker ]
    needs: [ prod_deploy ]
    steps:
    - uses: actions/checkout@v3
    - name: (re)Generate interface API swagger docs.
      run: make docs
      env:
        APP_URL: ${{ secrets.APP_URL }}
   
