version: '3.9'

networks:
  traefik_hermes:
    name: ${DOCKER_NETWORK_NAME}

volumes:
  swis-data-dev:
    name: swis-data-dev

services:
  swis-api-dev:
    image: ${DOCKER_IMAGE_TAG}
    container_name: ${DOCKER_DEV_CONTAINER_NAME}
    build:
      context: .
      dockerfile: .docker/Dockerfile
      args: 
        ALPINE_VERSION: ${ALPINE_VERSION}
        APP_NAME: ${APP_NAME}
        APP_ROOT: ${APP_ROOT}
        APP_VERSION: ${APP_VERSION}
        DOCKER_INTERNAL_PORT: ${DOCKER_INTERNAL_PORT} 
        DOCKER_USER: ${DOCKER_USER}
        GOLANG_VERSION: ${GOLANG_VERSION} 
    restart: unless-stopped
    command: ${APP_FLAGS}
    environment:
      - ALPINE_VERSION=${ALPINE_VERSION}
      - APP_ENVIRONMENT=${APP_ENVIRONMENT}
      - APP_NAME=${APP_NAME}
      - APP_VERSION=${APP_VERSION}
      - GIN_MODE=${GIN_MODE}
      - GOLANG_VERSION=${GOLANG_VERSION}
      - GOMAXPROCS=${GOMAXPROCS}
      - ROOT_TOKEN=${ROOT_TOKEN}
      - SERVER_PORT=${DOCKER_DEV_PORT}
      - TZ=${TZ}
    volumes: 
      - "swis-data-dev:${APP_ROOT}"
    cpus: 0.33
    dns:
      - 10.4.5.130
      - 1.1.1.2
      - 1.0.0.2
    mem_reservation: 128m
    ports:
      - "${DOCKER_DEV_PORT}:${DOCKER_DEV_PORT}/tcp"
    networks:
      - ${DOCKER_NETWORK_NAME}
    #labels:
    #  - "traefik.http.routers.${APP_NAME}-dev.rule=Host(${APP_URLS_TRAEFIK})"
    #  - "traefik.http.services.${APP_NAME}-dev.loadbalancer.server.port=${DOCKER_DEV_PORT}"
    #  - "traefik.docker.network=${DOCKER_NETWORK_NAME}"
    #  - "traefik.http.middlewares.compress-no-stream.compress=true"
    #  - "traefik.http.middlewares.compress-no-stream.compress.excludedcontenttypes=text/event-stream"
